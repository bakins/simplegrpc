// Code generated by protoc-gen-go-grpc-simple. DO NOT EDIT.

package helloworld

import (
	context "context"
	errors "errors"
	simplegrpc "github.com/bakins/simplegrpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = simplegrpc.SupportPackageIsVersion1

// GreeterSimpleClient is the client API for Greeter service.
type GreeterSimpleClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest) (*HelloReply, error)
}

type greeterSimpleClient struct {
	cc simplegrpc.ClientConn
}

func NewGreeterSimpleClient(cc simplegrpc.ClientConn) GreeterSimpleClient {
	return &greeterSimpleClient{cc: cc}
}

func (c *greeterSimpleClient) SayHello(ctx context.Context, in *HelloRequest) (*HelloReply, error) {
	stream, err := c.cc.NewStream(ctx, &_Greeter_simple_serviceDesc.Streams[0], "/helloworld.Greeter/SayHello")
	if err != nil {
		return nil, err
	}
	if err := stream.SendMsg(in); err != nil {
		return nil, err
	}
	var out HelloReply
	if err := stream.RecvMsg(&out); err != nil {
		return nil, err
	}
	return &out, nil
}

// GreeterSimpleServer is the simple server API for Greeter service.
type GreeterSimpleServer interface {
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterGreeterSimpleServer(s simplegrpc.ServiceRegistrar, srv GreeterSimpleServer) {
	s.RegisterService(&_Greeter_simple_serviceDesc, srv)
}

func _Greeter_SayHello_Simple_Handler(srv interface{}, stream simplegrpc.ServerStream) error {
	impl, ok := srv.(GreeterSimpleServer)
	if !ok {
		return errors.New("invalid server type - expected GreeterSimpleServer")
	}
	var in HelloRequest
	if err := stream.RecvMsg(&in); err != nil {
		return err
	}
	out, err := impl.SayHello(stream.Context(), &in)
	if err != nil {
		return err
	}
	return stream.SendMsg(out)
}

var _Greeter_simple_serviceDesc = simplegrpc.ServiceDesc{
	ServiceName: "helloworld.Greeter",
	HandlerType: (*GreeterSimpleServer)(nil),
	Streams: []simplegrpc.StreamDesc{
		{
			StreamName:    "SayHello",
			Handler:       _Greeter_SayHello_Simple_Handler,
			ServerStreams: false,
			ClientStreams: false,
		},
	},
	Metadata: "helloworld.proto",
}
